
** Conflict (shift/reduce) in state 57.
** Token involved: RPAR
** This state is reached from parse_formula after reading:

unary_temp_op LPAR boolForm 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

parse_formula 
tempForm EOF 
(?)

** In state 57, looking ahead at RPAR, shifting is permitted
** because of the following sub-derivation:

boolForm 
unary_temp_op LPAR boolForm . RPAR 

** In state 57, looking ahead at RPAR, reducing production
** tempForm -> boolForm 
** is permitted because of the following sub-derivation:

unary_temp_op LPAR tempForm RPAR // lookahead token appears
                   boolForm . 

** Conflict (shift/reduce) in state 40.
** Tokens involved: XOR OR IMP AND
** The following explanations concentrate on token XOR.
** This state is reached from parse_formula after reading:

boolForm binary_op boolForm 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

parse_formula 
tempForm EOF 
boolForm 
(?)

** In state 40, looking ahead at XOR, shifting is permitted
** because of the following sub-derivation:

boolForm binary_op boolForm 
                   boolForm binary_op boolForm 
                            . XOR 

** In state 40, looking ahead at XOR, reducing production
** boolForm -> boolForm binary_op boolForm 
** is permitted because of the following sub-derivation:

boolForm binary_op boolForm // lookahead token appears because binary_op can begin with XOR
boolForm binary_op boolForm . 
