State 0:
parse_formula' -> . parse_formula [ # ]
-- On VAR shift to state 1
-- On NEXT shift to state 2
-- On LPAR shift to state 3
-- On LIVE shift to state 5
-- On GLOBALLY shift to state 6
-- On FORALL shift to state 7
-- On FINALLY shift to state 8
-- On EXISTS shift to state 9
-- On EX shift to state 10
-- On ERROR shift to state 11
-- On EG shift to state 12
-- On EF shift to state 13
-- On CONST shift to state 14
-- On COMMAND shift to state 15
-- On AX shift to state 16
-- On AVAILABLE shift to state 17
-- On AG shift to state 18
-- On AF shift to state 19
-- On ACTIVE shift to state 20
-- On valueId shift to state 21
-- On unary_temp_op shift to state 53
-- On tempForm shift to state 58
-- On state_constant shift to state 32
-- On parse_formula shift to state 60
-- On boolForm shift to state 61
-- On atomicForm shift to state 41

State 1:
valueId -> VAR . [ XOR WEAK UNTIL S_RELEASE STE ST RPAR RELEASE OR NEQ LTE LT IMP EQ EOF AND ]
-- On XOR reduce production valueId -> VAR 
-- On WEAK reduce production valueId -> VAR 
-- On UNTIL reduce production valueId -> VAR 
-- On S_RELEASE reduce production valueId -> VAR 
-- On STE reduce production valueId -> VAR 
-- On ST reduce production valueId -> VAR 
-- On RPAR reduce production valueId -> VAR 
-- On RELEASE reduce production valueId -> VAR 
-- On OR reduce production valueId -> VAR 
-- On NEQ reduce production valueId -> VAR 
-- On LTE reduce production valueId -> VAR 
-- On LT reduce production valueId -> VAR 
-- On IMP reduce production valueId -> VAR 
-- On EQ reduce production valueId -> VAR 
-- On EOF reduce production valueId -> VAR 
-- On AND reduce production valueId -> VAR 

State 2:
unary_temp_op -> NEXT . [ LPAR ]
-- On LPAR reduce production unary_temp_op -> NEXT 

State 3:
boolForm -> LPAR . unary_op boolForm RPAR [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
boolForm -> LPAR . boolForm binary_temp_op boolForm RPAR [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
-- On VAR shift to state 1
-- On NOT shift to state 4
-- On NEXT shift to state 2
-- On LPAR shift to state 3
-- On LIVE shift to state 5
-- On GLOBALLY shift to state 6
-- On FORALL shift to state 7
-- On FINALLY shift to state 8
-- On EXISTS shift to state 9
-- On EX shift to state 10
-- On ERROR shift to state 11
-- On EG shift to state 12
-- On EF shift to state 13
-- On CONST shift to state 14
-- On COMMAND shift to state 15
-- On AX shift to state 16
-- On AVAILABLE shift to state 17
-- On AG shift to state 18
-- On AF shift to state 19
-- On ACTIVE shift to state 20
-- On valueId shift to state 21
-- On unary_temp_op shift to state 30
-- On unary_op shift to state 42
-- On state_constant shift to state 32
-- On boolForm shift to state 45
-- On atomicForm shift to state 41

State 4:
unary_op -> NOT . [ VAR NEXT LPAR LIVE GLOBALLY FORALL FINALLY EXISTS EX ERROR EG EF CONST COMMAND AX AVAILABLE AG AF ACTIVE ]
-- On VAR reduce production unary_op -> NOT 
-- On NEXT reduce production unary_op -> NOT 
-- On LPAR reduce production unary_op -> NOT 
-- On LIVE reduce production unary_op -> NOT 
-- On GLOBALLY reduce production unary_op -> NOT 
-- On FORALL reduce production unary_op -> NOT 
-- On FINALLY reduce production unary_op -> NOT 
-- On EXISTS reduce production unary_op -> NOT 
-- On EX reduce production unary_op -> NOT 
-- On ERROR reduce production unary_op -> NOT 
-- On EG reduce production unary_op -> NOT 
-- On EF reduce production unary_op -> NOT 
-- On CONST reduce production unary_op -> NOT 
-- On COMMAND reduce production unary_op -> NOT 
-- On AX reduce production unary_op -> NOT 
-- On AVAILABLE reduce production unary_op -> NOT 
-- On AG reduce production unary_op -> NOT 
-- On AF reduce production unary_op -> NOT 
-- On ACTIVE reduce production unary_op -> NOT 

State 5:
state_constant -> LIVE . [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
-- On XOR reduce production state_constant -> LIVE 
-- On WEAK reduce production state_constant -> LIVE 
-- On UNTIL reduce production state_constant -> LIVE 
-- On S_RELEASE reduce production state_constant -> LIVE 
-- On RPAR reduce production state_constant -> LIVE 
-- On RELEASE reduce production state_constant -> LIVE 
-- On OR reduce production state_constant -> LIVE 
-- On IMP reduce production state_constant -> LIVE 
-- On EOF reduce production state_constant -> LIVE 
-- On AND reduce production state_constant -> LIVE 

State 6:
unary_temp_op -> GLOBALLY . [ LPAR ]
-- On LPAR reduce production unary_temp_op -> GLOBALLY 

State 7:
unary_temp_op -> FORALL . [ LPAR ]
-- On LPAR reduce production unary_temp_op -> FORALL 

State 8:
unary_temp_op -> FINALLY . [ LPAR ]
-- On LPAR reduce production unary_temp_op -> FINALLY 

State 9:
unary_temp_op -> EXISTS . [ LPAR ]
-- On LPAR reduce production unary_temp_op -> EXISTS 

State 10:
unary_temp_op -> EX . [ LPAR ]
-- On LPAR reduce production unary_temp_op -> EX 

State 11:
state_constant -> ERROR . [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
-- On XOR reduce production state_constant -> ERROR 
-- On WEAK reduce production state_constant -> ERROR 
-- On UNTIL reduce production state_constant -> ERROR 
-- On S_RELEASE reduce production state_constant -> ERROR 
-- On RPAR reduce production state_constant -> ERROR 
-- On RELEASE reduce production state_constant -> ERROR 
-- On OR reduce production state_constant -> ERROR 
-- On IMP reduce production state_constant -> ERROR 
-- On EOF reduce production state_constant -> ERROR 
-- On AND reduce production state_constant -> ERROR 

State 12:
unary_temp_op -> EG . [ LPAR ]
-- On LPAR reduce production unary_temp_op -> EG 

State 13:
unary_temp_op -> EF . [ LPAR ]
-- On LPAR reduce production unary_temp_op -> EF 

State 14:
valueId -> CONST . [ XOR WEAK UNTIL S_RELEASE STE ST RPAR RELEASE OR NEQ LTE LT IMP EQ EOF AND ]
-- On XOR reduce production valueId -> CONST 
-- On WEAK reduce production valueId -> CONST 
-- On UNTIL reduce production valueId -> CONST 
-- On S_RELEASE reduce production valueId -> CONST 
-- On STE reduce production valueId -> CONST 
-- On ST reduce production valueId -> CONST 
-- On RPAR reduce production valueId -> CONST 
-- On RELEASE reduce production valueId -> CONST 
-- On OR reduce production valueId -> CONST 
-- On NEQ reduce production valueId -> CONST 
-- On LTE reduce production valueId -> CONST 
-- On LT reduce production valueId -> CONST 
-- On IMP reduce production valueId -> CONST 
-- On EQ reduce production valueId -> CONST 
-- On EOF reduce production valueId -> CONST 
-- On AND reduce production valueId -> CONST 

State 15:
valueId -> COMMAND . [ XOR WEAK UNTIL S_RELEASE STE ST RPAR RELEASE OR NEQ LTE LT IMP EQ EOF AND ]
-- On XOR reduce production valueId -> COMMAND 
-- On WEAK reduce production valueId -> COMMAND 
-- On UNTIL reduce production valueId -> COMMAND 
-- On S_RELEASE reduce production valueId -> COMMAND 
-- On STE reduce production valueId -> COMMAND 
-- On ST reduce production valueId -> COMMAND 
-- On RPAR reduce production valueId -> COMMAND 
-- On RELEASE reduce production valueId -> COMMAND 
-- On OR reduce production valueId -> COMMAND 
-- On NEQ reduce production valueId -> COMMAND 
-- On LTE reduce production valueId -> COMMAND 
-- On LT reduce production valueId -> COMMAND 
-- On IMP reduce production valueId -> COMMAND 
-- On EQ reduce production valueId -> COMMAND 
-- On EOF reduce production valueId -> COMMAND 
-- On AND reduce production valueId -> COMMAND 

State 16:
unary_temp_op -> AX . [ LPAR ]
-- On LPAR reduce production unary_temp_op -> AX 

State 17:
state_constant -> AVAILABLE . [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
-- On XOR reduce production state_constant -> AVAILABLE 
-- On WEAK reduce production state_constant -> AVAILABLE 
-- On UNTIL reduce production state_constant -> AVAILABLE 
-- On S_RELEASE reduce production state_constant -> AVAILABLE 
-- On RPAR reduce production state_constant -> AVAILABLE 
-- On RELEASE reduce production state_constant -> AVAILABLE 
-- On OR reduce production state_constant -> AVAILABLE 
-- On IMP reduce production state_constant -> AVAILABLE 
-- On EOF reduce production state_constant -> AVAILABLE 
-- On AND reduce production state_constant -> AVAILABLE 

State 18:
unary_temp_op -> AG . [ LPAR ]
-- On LPAR reduce production unary_temp_op -> AG 

State 19:
unary_temp_op -> AF . [ LPAR ]
-- On LPAR reduce production unary_temp_op -> AF 

State 20:
state_constant -> ACTIVE . [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
-- On XOR reduce production state_constant -> ACTIVE 
-- On WEAK reduce production state_constant -> ACTIVE 
-- On UNTIL reduce production state_constant -> ACTIVE 
-- On S_RELEASE reduce production state_constant -> ACTIVE 
-- On RPAR reduce production state_constant -> ACTIVE 
-- On RELEASE reduce production state_constant -> ACTIVE 
-- On OR reduce production state_constant -> ACTIVE 
-- On IMP reduce production state_constant -> ACTIVE 
-- On EOF reduce production state_constant -> ACTIVE 
-- On AND reduce production state_constant -> ACTIVE 

State 21:
atomicForm -> valueId . comp valueId [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
-- On STE shift to state 22
-- On ST shift to state 23
-- On NEQ shift to state 24
-- On LTE shift to state 25
-- On LT shift to state 26
-- On EQ shift to state 27
-- On comp shift to state 28

State 22:
comp -> STE . [ VAR CONST COMMAND ]
-- On VAR reduce production comp -> STE 
-- On CONST reduce production comp -> STE 
-- On COMMAND reduce production comp -> STE 

State 23:
comp -> ST . [ VAR CONST COMMAND ]
-- On VAR reduce production comp -> ST 
-- On CONST reduce production comp -> ST 
-- On COMMAND reduce production comp -> ST 

State 24:
comp -> NEQ . [ VAR CONST COMMAND ]
-- On VAR reduce production comp -> NEQ 
-- On CONST reduce production comp -> NEQ 
-- On COMMAND reduce production comp -> NEQ 

State 25:
comp -> LTE . [ VAR CONST COMMAND ]
-- On VAR reduce production comp -> LTE 
-- On CONST reduce production comp -> LTE 
-- On COMMAND reduce production comp -> LTE 

State 26:
comp -> LT . [ VAR CONST COMMAND ]
-- On VAR reduce production comp -> LT 
-- On CONST reduce production comp -> LT 
-- On COMMAND reduce production comp -> LT 

State 27:
comp -> EQ . [ VAR CONST COMMAND ]
-- On VAR reduce production comp -> EQ 
-- On CONST reduce production comp -> EQ 
-- On COMMAND reduce production comp -> EQ 

State 28:
atomicForm -> valueId comp . valueId [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
-- On VAR shift to state 1
-- On CONST shift to state 14
-- On COMMAND shift to state 15
-- On valueId shift to state 29

State 29:
atomicForm -> valueId comp valueId . [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
-- On XOR reduce production atomicForm -> valueId comp valueId 
-- On WEAK reduce production atomicForm -> valueId comp valueId 
-- On UNTIL reduce production atomicForm -> valueId comp valueId 
-- On S_RELEASE reduce production atomicForm -> valueId comp valueId 
-- On RPAR reduce production atomicForm -> valueId comp valueId 
-- On RELEASE reduce production atomicForm -> valueId comp valueId 
-- On OR reduce production atomicForm -> valueId comp valueId 
-- On IMP reduce production atomicForm -> valueId comp valueId 
-- On EOF reduce production atomicForm -> valueId comp valueId 
-- On AND reduce production atomicForm -> valueId comp valueId 

State 30:
boolForm -> unary_temp_op . LPAR boolForm RPAR [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
-- On LPAR shift to state 31

State 31:
boolForm -> unary_temp_op LPAR . boolForm RPAR [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
-- On VAR shift to state 1
-- On NEXT shift to state 2
-- On LPAR shift to state 3
-- On LIVE shift to state 5
-- On GLOBALLY shift to state 6
-- On FORALL shift to state 7
-- On FINALLY shift to state 8
-- On EXISTS shift to state 9
-- On EX shift to state 10
-- On ERROR shift to state 11
-- On EG shift to state 12
-- On EF shift to state 13
-- On CONST shift to state 14
-- On COMMAND shift to state 15
-- On AX shift to state 16
-- On AVAILABLE shift to state 17
-- On AG shift to state 18
-- On AF shift to state 19
-- On ACTIVE shift to state 20
-- On valueId shift to state 21
-- On unary_temp_op shift to state 30
-- On state_constant shift to state 32
-- On boolForm shift to state 33
-- On atomicForm shift to state 41

State 32:
atomicForm -> state_constant . [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
-- On XOR reduce production atomicForm -> state_constant 
-- On WEAK reduce production atomicForm -> state_constant 
-- On UNTIL reduce production atomicForm -> state_constant 
-- On S_RELEASE reduce production atomicForm -> state_constant 
-- On RPAR reduce production atomicForm -> state_constant 
-- On RELEASE reduce production atomicForm -> state_constant 
-- On OR reduce production atomicForm -> state_constant 
-- On IMP reduce production atomicForm -> state_constant 
-- On EOF reduce production atomicForm -> state_constant 
-- On AND reduce production atomicForm -> state_constant 

State 33:
boolForm -> boolForm . binary_op boolForm [ XOR RPAR OR IMP AND ]
boolForm -> unary_temp_op LPAR boolForm . RPAR [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
-- On XOR shift to state 34
-- On RPAR shift to state 35
-- On OR shift to state 36
-- On IMP shift to state 37
-- On AND shift to state 38
-- On binary_op shift to state 39

State 34:
binary_op -> XOR . [ VAR NEXT LPAR LIVE GLOBALLY FORALL FINALLY EXISTS EX ERROR EG EF CONST COMMAND AX AVAILABLE AG AF ACTIVE ]
-- On VAR reduce production binary_op -> XOR 
-- On NEXT reduce production binary_op -> XOR 
-- On LPAR reduce production binary_op -> XOR 
-- On LIVE reduce production binary_op -> XOR 
-- On GLOBALLY reduce production binary_op -> XOR 
-- On FORALL reduce production binary_op -> XOR 
-- On FINALLY reduce production binary_op -> XOR 
-- On EXISTS reduce production binary_op -> XOR 
-- On EX reduce production binary_op -> XOR 
-- On ERROR reduce production binary_op -> XOR 
-- On EG reduce production binary_op -> XOR 
-- On EF reduce production binary_op -> XOR 
-- On CONST reduce production binary_op -> XOR 
-- On COMMAND reduce production binary_op -> XOR 
-- On AX reduce production binary_op -> XOR 
-- On AVAILABLE reduce production binary_op -> XOR 
-- On AG reduce production binary_op -> XOR 
-- On AF reduce production binary_op -> XOR 
-- On ACTIVE reduce production binary_op -> XOR 

State 35:
boolForm -> unary_temp_op LPAR boolForm RPAR . [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
-- On XOR reduce production boolForm -> unary_temp_op LPAR boolForm RPAR 
-- On WEAK reduce production boolForm -> unary_temp_op LPAR boolForm RPAR 
-- On UNTIL reduce production boolForm -> unary_temp_op LPAR boolForm RPAR 
-- On S_RELEASE reduce production boolForm -> unary_temp_op LPAR boolForm RPAR 
-- On RPAR reduce production boolForm -> unary_temp_op LPAR boolForm RPAR 
-- On RELEASE reduce production boolForm -> unary_temp_op LPAR boolForm RPAR 
-- On OR reduce production boolForm -> unary_temp_op LPAR boolForm RPAR 
-- On IMP reduce production boolForm -> unary_temp_op LPAR boolForm RPAR 
-- On EOF reduce production boolForm -> unary_temp_op LPAR boolForm RPAR 
-- On AND reduce production boolForm -> unary_temp_op LPAR boolForm RPAR 

State 36:
binary_op -> OR . [ VAR NEXT LPAR LIVE GLOBALLY FORALL FINALLY EXISTS EX ERROR EG EF CONST COMMAND AX AVAILABLE AG AF ACTIVE ]
-- On VAR reduce production binary_op -> OR 
-- On NEXT reduce production binary_op -> OR 
-- On LPAR reduce production binary_op -> OR 
-- On LIVE reduce production binary_op -> OR 
-- On GLOBALLY reduce production binary_op -> OR 
-- On FORALL reduce production binary_op -> OR 
-- On FINALLY reduce production binary_op -> OR 
-- On EXISTS reduce production binary_op -> OR 
-- On EX reduce production binary_op -> OR 
-- On ERROR reduce production binary_op -> OR 
-- On EG reduce production binary_op -> OR 
-- On EF reduce production binary_op -> OR 
-- On CONST reduce production binary_op -> OR 
-- On COMMAND reduce production binary_op -> OR 
-- On AX reduce production binary_op -> OR 
-- On AVAILABLE reduce production binary_op -> OR 
-- On AG reduce production binary_op -> OR 
-- On AF reduce production binary_op -> OR 
-- On ACTIVE reduce production binary_op -> OR 

State 37:
binary_op -> IMP . [ VAR NEXT LPAR LIVE GLOBALLY FORALL FINALLY EXISTS EX ERROR EG EF CONST COMMAND AX AVAILABLE AG AF ACTIVE ]
-- On VAR reduce production binary_op -> IMP 
-- On NEXT reduce production binary_op -> IMP 
-- On LPAR reduce production binary_op -> IMP 
-- On LIVE reduce production binary_op -> IMP 
-- On GLOBALLY reduce production binary_op -> IMP 
-- On FORALL reduce production binary_op -> IMP 
-- On FINALLY reduce production binary_op -> IMP 
-- On EXISTS reduce production binary_op -> IMP 
-- On EX reduce production binary_op -> IMP 
-- On ERROR reduce production binary_op -> IMP 
-- On EG reduce production binary_op -> IMP 
-- On EF reduce production binary_op -> IMP 
-- On CONST reduce production binary_op -> IMP 
-- On COMMAND reduce production binary_op -> IMP 
-- On AX reduce production binary_op -> IMP 
-- On AVAILABLE reduce production binary_op -> IMP 
-- On AG reduce production binary_op -> IMP 
-- On AF reduce production binary_op -> IMP 
-- On ACTIVE reduce production binary_op -> IMP 

State 38:
binary_op -> AND . [ VAR NEXT LPAR LIVE GLOBALLY FORALL FINALLY EXISTS EX ERROR EG EF CONST COMMAND AX AVAILABLE AG AF ACTIVE ]
-- On VAR reduce production binary_op -> AND 
-- On NEXT reduce production binary_op -> AND 
-- On LPAR reduce production binary_op -> AND 
-- On LIVE reduce production binary_op -> AND 
-- On GLOBALLY reduce production binary_op -> AND 
-- On FORALL reduce production binary_op -> AND 
-- On FINALLY reduce production binary_op -> AND 
-- On EXISTS reduce production binary_op -> AND 
-- On EX reduce production binary_op -> AND 
-- On ERROR reduce production binary_op -> AND 
-- On EG reduce production binary_op -> AND 
-- On EF reduce production binary_op -> AND 
-- On CONST reduce production binary_op -> AND 
-- On COMMAND reduce production binary_op -> AND 
-- On AX reduce production binary_op -> AND 
-- On AVAILABLE reduce production binary_op -> AND 
-- On AG reduce production binary_op -> AND 
-- On AF reduce production binary_op -> AND 
-- On ACTIVE reduce production binary_op -> AND 

State 39:
boolForm -> boolForm binary_op . boolForm [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
-- On VAR shift to state 1
-- On NEXT shift to state 2
-- On LPAR shift to state 3
-- On LIVE shift to state 5
-- On GLOBALLY shift to state 6
-- On FORALL shift to state 7
-- On FINALLY shift to state 8
-- On EXISTS shift to state 9
-- On EX shift to state 10
-- On ERROR shift to state 11
-- On EG shift to state 12
-- On EF shift to state 13
-- On CONST shift to state 14
-- On COMMAND shift to state 15
-- On AX shift to state 16
-- On AVAILABLE shift to state 17
-- On AG shift to state 18
-- On AF shift to state 19
-- On ACTIVE shift to state 20
-- On valueId shift to state 21
-- On unary_temp_op shift to state 30
-- On state_constant shift to state 32
-- On boolForm shift to state 40
-- On atomicForm shift to state 41

State 40:
boolForm -> boolForm . binary_op boolForm [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
boolForm -> boolForm binary_op boolForm . [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
-- On XOR shift to state 34
-- On OR shift to state 36
-- On IMP shift to state 37
-- On AND shift to state 38
-- On binary_op shift to state 39
-- On XOR reduce production boolForm -> boolForm binary_op boolForm 
-- On WEAK reduce production boolForm -> boolForm binary_op boolForm 
-- On UNTIL reduce production boolForm -> boolForm binary_op boolForm 
-- On S_RELEASE reduce production boolForm -> boolForm binary_op boolForm 
-- On RPAR reduce production boolForm -> boolForm binary_op boolForm 
-- On RELEASE reduce production boolForm -> boolForm binary_op boolForm 
-- On OR reduce production boolForm -> boolForm binary_op boolForm 
-- On IMP reduce production boolForm -> boolForm binary_op boolForm 
-- On EOF reduce production boolForm -> boolForm binary_op boolForm 
-- On AND reduce production boolForm -> boolForm binary_op boolForm 
** Conflict on XOR OR IMP AND

State 41:
boolForm -> atomicForm . [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
-- On XOR reduce production boolForm -> atomicForm 
-- On WEAK reduce production boolForm -> atomicForm 
-- On UNTIL reduce production boolForm -> atomicForm 
-- On S_RELEASE reduce production boolForm -> atomicForm 
-- On RPAR reduce production boolForm -> atomicForm 
-- On RELEASE reduce production boolForm -> atomicForm 
-- On OR reduce production boolForm -> atomicForm 
-- On IMP reduce production boolForm -> atomicForm 
-- On EOF reduce production boolForm -> atomicForm 
-- On AND reduce production boolForm -> atomicForm 

State 42:
boolForm -> LPAR unary_op . boolForm RPAR [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
-- On VAR shift to state 1
-- On NEXT shift to state 2
-- On LPAR shift to state 3
-- On LIVE shift to state 5
-- On GLOBALLY shift to state 6
-- On FORALL shift to state 7
-- On FINALLY shift to state 8
-- On EXISTS shift to state 9
-- On EX shift to state 10
-- On ERROR shift to state 11
-- On EG shift to state 12
-- On EF shift to state 13
-- On CONST shift to state 14
-- On COMMAND shift to state 15
-- On AX shift to state 16
-- On AVAILABLE shift to state 17
-- On AG shift to state 18
-- On AF shift to state 19
-- On ACTIVE shift to state 20
-- On valueId shift to state 21
-- On unary_temp_op shift to state 30
-- On state_constant shift to state 32
-- On boolForm shift to state 43
-- On atomicForm shift to state 41

State 43:
boolForm -> LPAR unary_op boolForm . RPAR [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
boolForm -> boolForm . binary_op boolForm [ XOR RPAR OR IMP AND ]
-- On XOR shift to state 34
-- On RPAR shift to state 44
-- On OR shift to state 36
-- On IMP shift to state 37
-- On AND shift to state 38
-- On binary_op shift to state 39

State 44:
boolForm -> LPAR unary_op boolForm RPAR . [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
-- On XOR reduce production boolForm -> LPAR unary_op boolForm RPAR 
-- On WEAK reduce production boolForm -> LPAR unary_op boolForm RPAR 
-- On UNTIL reduce production boolForm -> LPAR unary_op boolForm RPAR 
-- On S_RELEASE reduce production boolForm -> LPAR unary_op boolForm RPAR 
-- On RPAR reduce production boolForm -> LPAR unary_op boolForm RPAR 
-- On RELEASE reduce production boolForm -> LPAR unary_op boolForm RPAR 
-- On OR reduce production boolForm -> LPAR unary_op boolForm RPAR 
-- On IMP reduce production boolForm -> LPAR unary_op boolForm RPAR 
-- On EOF reduce production boolForm -> LPAR unary_op boolForm RPAR 
-- On AND reduce production boolForm -> LPAR unary_op boolForm RPAR 

State 45:
boolForm -> boolForm . binary_op boolForm [ XOR WEAK UNTIL S_RELEASE RELEASE OR IMP AND ]
boolForm -> LPAR boolForm . binary_temp_op boolForm RPAR [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
-- On XOR shift to state 34
-- On WEAK shift to state 46
-- On UNTIL shift to state 47
-- On S_RELEASE shift to state 48
-- On RELEASE shift to state 49
-- On OR shift to state 36
-- On IMP shift to state 37
-- On AND shift to state 38
-- On binary_temp_op shift to state 50
-- On binary_op shift to state 39

State 46:
binary_temp_op -> WEAK . [ VAR NEXT LPAR LIVE GLOBALLY FORALL FINALLY EXISTS EX ERROR EG EF CONST COMMAND AX AVAILABLE AG AF ACTIVE ]
-- On VAR reduce production binary_temp_op -> WEAK 
-- On NEXT reduce production binary_temp_op -> WEAK 
-- On LPAR reduce production binary_temp_op -> WEAK 
-- On LIVE reduce production binary_temp_op -> WEAK 
-- On GLOBALLY reduce production binary_temp_op -> WEAK 
-- On FORALL reduce production binary_temp_op -> WEAK 
-- On FINALLY reduce production binary_temp_op -> WEAK 
-- On EXISTS reduce production binary_temp_op -> WEAK 
-- On EX reduce production binary_temp_op -> WEAK 
-- On ERROR reduce production binary_temp_op -> WEAK 
-- On EG reduce production binary_temp_op -> WEAK 
-- On EF reduce production binary_temp_op -> WEAK 
-- On CONST reduce production binary_temp_op -> WEAK 
-- On COMMAND reduce production binary_temp_op -> WEAK 
-- On AX reduce production binary_temp_op -> WEAK 
-- On AVAILABLE reduce production binary_temp_op -> WEAK 
-- On AG reduce production binary_temp_op -> WEAK 
-- On AF reduce production binary_temp_op -> WEAK 
-- On ACTIVE reduce production binary_temp_op -> WEAK 

State 47:
binary_temp_op -> UNTIL . [ VAR NEXT LPAR LIVE GLOBALLY FORALL FINALLY EXISTS EX ERROR EG EF CONST COMMAND AX AVAILABLE AG AF ACTIVE ]
-- On VAR reduce production binary_temp_op -> UNTIL 
-- On NEXT reduce production binary_temp_op -> UNTIL 
-- On LPAR reduce production binary_temp_op -> UNTIL 
-- On LIVE reduce production binary_temp_op -> UNTIL 
-- On GLOBALLY reduce production binary_temp_op -> UNTIL 
-- On FORALL reduce production binary_temp_op -> UNTIL 
-- On FINALLY reduce production binary_temp_op -> UNTIL 
-- On EXISTS reduce production binary_temp_op -> UNTIL 
-- On EX reduce production binary_temp_op -> UNTIL 
-- On ERROR reduce production binary_temp_op -> UNTIL 
-- On EG reduce production binary_temp_op -> UNTIL 
-- On EF reduce production binary_temp_op -> UNTIL 
-- On CONST reduce production binary_temp_op -> UNTIL 
-- On COMMAND reduce production binary_temp_op -> UNTIL 
-- On AX reduce production binary_temp_op -> UNTIL 
-- On AVAILABLE reduce production binary_temp_op -> UNTIL 
-- On AG reduce production binary_temp_op -> UNTIL 
-- On AF reduce production binary_temp_op -> UNTIL 
-- On ACTIVE reduce production binary_temp_op -> UNTIL 

State 48:
binary_temp_op -> S_RELEASE . [ VAR NEXT LPAR LIVE GLOBALLY FORALL FINALLY EXISTS EX ERROR EG EF CONST COMMAND AX AVAILABLE AG AF ACTIVE ]
-- On VAR reduce production binary_temp_op -> S_RELEASE 
-- On NEXT reduce production binary_temp_op -> S_RELEASE 
-- On LPAR reduce production binary_temp_op -> S_RELEASE 
-- On LIVE reduce production binary_temp_op -> S_RELEASE 
-- On GLOBALLY reduce production binary_temp_op -> S_RELEASE 
-- On FORALL reduce production binary_temp_op -> S_RELEASE 
-- On FINALLY reduce production binary_temp_op -> S_RELEASE 
-- On EXISTS reduce production binary_temp_op -> S_RELEASE 
-- On EX reduce production binary_temp_op -> S_RELEASE 
-- On ERROR reduce production binary_temp_op -> S_RELEASE 
-- On EG reduce production binary_temp_op -> S_RELEASE 
-- On EF reduce production binary_temp_op -> S_RELEASE 
-- On CONST reduce production binary_temp_op -> S_RELEASE 
-- On COMMAND reduce production binary_temp_op -> S_RELEASE 
-- On AX reduce production binary_temp_op -> S_RELEASE 
-- On AVAILABLE reduce production binary_temp_op -> S_RELEASE 
-- On AG reduce production binary_temp_op -> S_RELEASE 
-- On AF reduce production binary_temp_op -> S_RELEASE 
-- On ACTIVE reduce production binary_temp_op -> S_RELEASE 

State 49:
binary_temp_op -> RELEASE . [ VAR NEXT LPAR LIVE GLOBALLY FORALL FINALLY EXISTS EX ERROR EG EF CONST COMMAND AX AVAILABLE AG AF ACTIVE ]
-- On VAR reduce production binary_temp_op -> RELEASE 
-- On NEXT reduce production binary_temp_op -> RELEASE 
-- On LPAR reduce production binary_temp_op -> RELEASE 
-- On LIVE reduce production binary_temp_op -> RELEASE 
-- On GLOBALLY reduce production binary_temp_op -> RELEASE 
-- On FORALL reduce production binary_temp_op -> RELEASE 
-- On FINALLY reduce production binary_temp_op -> RELEASE 
-- On EXISTS reduce production binary_temp_op -> RELEASE 
-- On EX reduce production binary_temp_op -> RELEASE 
-- On ERROR reduce production binary_temp_op -> RELEASE 
-- On EG reduce production binary_temp_op -> RELEASE 
-- On EF reduce production binary_temp_op -> RELEASE 
-- On CONST reduce production binary_temp_op -> RELEASE 
-- On COMMAND reduce production binary_temp_op -> RELEASE 
-- On AX reduce production binary_temp_op -> RELEASE 
-- On AVAILABLE reduce production binary_temp_op -> RELEASE 
-- On AG reduce production binary_temp_op -> RELEASE 
-- On AF reduce production binary_temp_op -> RELEASE 
-- On ACTIVE reduce production binary_temp_op -> RELEASE 

State 50:
boolForm -> LPAR boolForm binary_temp_op . boolForm RPAR [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
-- On VAR shift to state 1
-- On NEXT shift to state 2
-- On LPAR shift to state 3
-- On LIVE shift to state 5
-- On GLOBALLY shift to state 6
-- On FORALL shift to state 7
-- On FINALLY shift to state 8
-- On EXISTS shift to state 9
-- On EX shift to state 10
-- On ERROR shift to state 11
-- On EG shift to state 12
-- On EF shift to state 13
-- On CONST shift to state 14
-- On COMMAND shift to state 15
-- On AX shift to state 16
-- On AVAILABLE shift to state 17
-- On AG shift to state 18
-- On AF shift to state 19
-- On ACTIVE shift to state 20
-- On valueId shift to state 21
-- On unary_temp_op shift to state 30
-- On state_constant shift to state 32
-- On boolForm shift to state 51
-- On atomicForm shift to state 41

State 51:
boolForm -> boolForm . binary_op boolForm [ XOR RPAR OR IMP AND ]
boolForm -> LPAR boolForm binary_temp_op boolForm . RPAR [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
-- On XOR shift to state 34
-- On RPAR shift to state 52
-- On OR shift to state 36
-- On IMP shift to state 37
-- On AND shift to state 38
-- On binary_op shift to state 39

State 52:
boolForm -> LPAR boolForm binary_temp_op boolForm RPAR . [ XOR WEAK UNTIL S_RELEASE RPAR RELEASE OR IMP EOF AND ]
-- On XOR reduce production boolForm -> LPAR boolForm binary_temp_op boolForm RPAR 
-- On WEAK reduce production boolForm -> LPAR boolForm binary_temp_op boolForm RPAR 
-- On UNTIL reduce production boolForm -> LPAR boolForm binary_temp_op boolForm RPAR 
-- On S_RELEASE reduce production boolForm -> LPAR boolForm binary_temp_op boolForm RPAR 
-- On RPAR reduce production boolForm -> LPAR boolForm binary_temp_op boolForm RPAR 
-- On RELEASE reduce production boolForm -> LPAR boolForm binary_temp_op boolForm RPAR 
-- On OR reduce production boolForm -> LPAR boolForm binary_temp_op boolForm RPAR 
-- On IMP reduce production boolForm -> LPAR boolForm binary_temp_op boolForm RPAR 
-- On EOF reduce production boolForm -> LPAR boolForm binary_temp_op boolForm RPAR 
-- On AND reduce production boolForm -> LPAR boolForm binary_temp_op boolForm RPAR 

State 53:
boolForm -> unary_temp_op . LPAR boolForm RPAR [ XOR RPAR OR IMP EOF AND ]
tempForm -> unary_temp_op . LPAR tempForm RPAR [ RPAR EOF ]
-- On LPAR shift to state 54

State 54:
boolForm -> unary_temp_op LPAR . boolForm RPAR [ XOR RPAR OR IMP EOF AND ]
tempForm -> unary_temp_op LPAR . tempForm RPAR [ RPAR EOF ]
-- On VAR shift to state 1
-- On NEXT shift to state 2
-- On LPAR shift to state 3
-- On LIVE shift to state 5
-- On GLOBALLY shift to state 6
-- On FORALL shift to state 7
-- On FINALLY shift to state 8
-- On EXISTS shift to state 9
-- On EX shift to state 10
-- On ERROR shift to state 11
-- On EG shift to state 12
-- On EF shift to state 13
-- On CONST shift to state 14
-- On COMMAND shift to state 15
-- On AX shift to state 16
-- On AVAILABLE shift to state 17
-- On AG shift to state 18
-- On AF shift to state 19
-- On ACTIVE shift to state 20
-- On valueId shift to state 21
-- On unary_temp_op shift to state 53
-- On tempForm shift to state 55
-- On state_constant shift to state 32
-- On boolForm shift to state 57
-- On atomicForm shift to state 41

State 55:
tempForm -> unary_temp_op LPAR tempForm . RPAR [ RPAR EOF ]
-- On RPAR shift to state 56

State 56:
tempForm -> unary_temp_op LPAR tempForm RPAR . [ RPAR EOF ]
-- On RPAR reduce production tempForm -> unary_temp_op LPAR tempForm RPAR 
-- On EOF reduce production tempForm -> unary_temp_op LPAR tempForm RPAR 

State 57:
boolForm -> boolForm . binary_op boolForm [ XOR RPAR OR IMP AND ]
boolForm -> unary_temp_op LPAR boolForm . RPAR [ XOR RPAR OR IMP EOF AND ]
tempForm -> boolForm . [ RPAR ]
-- On XOR shift to state 34
-- On RPAR shift to state 35
-- On OR shift to state 36
-- On IMP shift to state 37
-- On AND shift to state 38
-- On binary_op shift to state 39
-- On RPAR reduce production tempForm -> boolForm 
** Conflict on RPAR

State 58:
parse_formula -> tempForm . EOF [ # ]
-- On EOF shift to state 59

State 59:
parse_formula -> tempForm EOF . [ # ]
-- On # reduce production parse_formula -> tempForm EOF 

State 60:
parse_formula' -> parse_formula . [ # ]
-- On # accept parse_formula

State 61:
boolForm -> boolForm . binary_op boolForm [ XOR OR IMP EOF AND ]
tempForm -> boolForm . [ EOF ]
-- On XOR shift to state 34
-- On OR shift to state 36
-- On IMP shift to state 37
-- On AND shift to state 38
-- On binary_op shift to state 39
-- On EOF reduce production tempForm -> boolForm 

